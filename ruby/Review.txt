Variables
1. What is a variable? Why might a programmer use a variable?
A Variable is stored memory assigned to a value. For example : X = 22
22 is the stored memory and the value of X is now 22 but it could be anything you want.

A programmer might want to use a variable because it stores chunks of information and can be manipulated in multiple ways, like methods. Variables also save from having to type large chunks of information over and over again.

2. If the value of first_name is "Abraham" and last_name is "Lincoln", explain the order in which Ruby will run the line full_name = first_name + last_name, and what the final result will be.
Ruby will break everything down to its simpliest form and combine them.
Starting with the right side of the equation it will replace first_name with Abraham to look like

full_name = "Abraham" + last_name

then replace last_name with "Lincoln"

to look like this

full_name = "Abraham" + "Lincoln"

Then actually add them to be full_name = "AbrahamLincoln"
then assign the variable full_name the value of "AbrahamLincoln"
#probably should of used a space somewhere

Data Types
3. For each of the following data types, write a short definition and give at least one example of when you might use the data type in a program. (Don't use an example we've already provided.)

string - "word"
integer - 8675309
float - 3.14
nil - No value 
boolean - is an expression with the values of true or false  ex: 4 > 3 = True
Algorithms - A step by step procedure similar to a recipe that a program will follow to reach a goal #That you determine. Utilizes inputs and provides outputs
ex: Algorithm for going to work.
1. Wake up
2. Go to bathroom
3. Brush teeth
4. Walk to kitchen
5. Drink Juice straight from the carton like a boss
6. Get dressed
7. Go to car and start it up
8. Listen to your good friend google maps on directions to jobsite
9. Park the car and walk inside building
10. Make that $$$$

4. What is an algorithm? see sweet definition above

5. What are two common categories of algorithm in computer science? 
Sort Algorithms 

Search Algorithms 

Methods
6. What is a method? Why might a programmer choose to use a method?
 A method is a function that is defined by the user that returns a value. A programmer would use a method so that he/she can manipulate data that is scalable with unknown variables.


7. Define the following terms as they relate to a method. 

return value - The value of the method after running the defined algorithm 
side effect - An expression that effects other input that does not have any return value in of itself
parameter - The variable used to hold where an argument would be used as an input in a method
argument - The value of the input used to run through a method when it is called
implicit return - the last evaluated line of code in a method that does not specifically have the command ```return``` will be the output

8. What are global scope and method scope? How do those scopes impact the availability of data at different points in a program?

Global scope - The list of variables that exist in the entire ruby programming
method scope - the list of active variables that work only within that specified method

The data that is available inside a method scope will not function outside the method in the same way it does inside the method and variables can be assigned different values outside the method that does not affect the method.

Control Flow
9. What is control flow? Why might a programmer choose to use flow control?
Control flow is allows a program to make decisions based on the input received and what it is told to do with specific or non-specific responses from the user.
A programmer might choose to use control flow to gather information and terminate the program when all of the information is collected. Or make suggestions based on a user's input.

10. Define the following terms as they relate to flow control.

loop - code that is repeated until certain conditions are met
if - a command that allows the program to branch out and execute lines of code based on specified conditions
else - Will run this command if none of the conditions in the if loop are met 
elsif - Will run this line of code if this specified line of code's conditions are met if the 'if' condition is not met
while - Continue to execute the code as long as the condition is met
until - continue to execute the code until a specfic condition is met